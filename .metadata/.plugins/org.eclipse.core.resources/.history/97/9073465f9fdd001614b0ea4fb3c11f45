

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;

import weka.classifiers.Evaluation;
import weka.classifiers.bayes.NaiveBayes;
import weka.core.Instances;
public class WekaMain {

	public static void main(String[] args) {
		
	
		clasificador();

	}
	
	public static void clasificador(){
		/*
		
		BufferedReader reader1;
		BufferedReader reader2;
		try {
			reader1 = new BufferedReader(
					new FileReader("/Users/Docente/Desktop/Weka/weather.nominal.arff"));
		 
			reader2 = new BufferedReader(
					new FileReader("/Users/Docente/Desktop/Weka/weather.nominal_test_inc.arff"));
		 Instances train = new Instances(reader1);
		 train.setClassIndex(train.numAttributes() - 1); 
		//System.out.println(train.classIndex() + " " + train.numAttributes()  );
		 
		 
		 Instances test = new Instances(reader2);
		 test.setClassIndex(train.numAttributes() - 1); 
		 //System.out.println(test.classIndex() + " " + test.numAttributes()  );
		 
		 
		 NaiveBayes model=new NaiveBayes();
		 model.buildClassifier(train);
		 
		 //classify
		 
		 Instances labeled = new Instances(test);
		 
		 for (int i = 0; i < test.numInstances(); i++){
			 double clsLabel = model.classifyInstance(test.instance(i));
			 labeled.instance(i).setClassValue(clsLabel);
		 }
		 
		 /////////// https://youtu.be/JY_x5zKTfyo?list=PLJbE6j2EG1pZnBhOg3_Rb63WLCprtyJag
		 
		 Evaluation eval_train = new Evaluation(test);
		 eval_train.evaluateModel(model,test);
		 
		 reader1.close();
		 reader2.close();
		 
		 //System.out.println(eval_train.toSummaryString("\nResults\n======\n", false));
		 
		 String[] options = new String[4];
		 options[0] = "-t"; //name of training file
		 options[1] = "/Users/Docente/Desktop/Weka/weather.nominal.arff";
		 options[2] = "-T";
		 options[3] = "/Users/Docente/Desktop/Weka/weather.nominal_test_inc.arff";		 
		 System.out.println(Evaluation.evaluateModel(model, options));
		 
		 
		 /// print classification results to file 
		 
		 BufferedWriter writer = new BufferedWriter(
				 new FileWriter("/Users/Docente/Desktop/Weka/weather.nominal_labeled1.arff"));
		 writer.write(labeled.toString());
		 
		 writer.close();
		 
		}
		 catch (Exception e) {
				e.printStackTrace();
		}
    }

}
*/

		String sDirectorio = "C:\\Users\\Docente\\Desktop\\Weka\\Archivos_carga";
		
		BufferedReader reader1;
		
		try {
			File f = new File (sDirectorio);
			if (f.exists()){
				File [] ficheros = f.listFiles();
				
				for(int x=0; x<ficheros.length;x++){
					
					reader1 = new BufferedReader(
							new FileReader("/Users/Docente/Desktop/Weka/0_9.txt"));
					//new FileReader("/Users/Docente/Desktop/Weka/0_9.txt"));
					String [] temp; 
					String delimiter = "[.]"+ " ";
				
				    temp = (String.valueOf(reader1.readLine())).split(delimiter);
				    BufferedWriter writer = new BufferedWriter(
							 new FileWriter("/Users/Docente/Desktop/Weka/0_9_prueba.txt"));
					
					for(int i =0; i < temp.length ; i++)
						{System.out.println(temp[i]);
						writer.write(temp[i] + "\n");
						}
					  
						
					 writer.close();
					 reader1.close();	
					
				}
				
			}
			
		
			}catch (Exception e) {
				e.printStackTrace();
			}
    	}
}
